Api callling

 const [userData, SetUserData] = useState();
   const [isLoading, setIsLoading] = useState();
   const getUserData = async () => {
     try {
       const response = await fetch(
         "https://rajansingh1801.github.io/Api/dummyData.js"
       );
       const myData = await response.json();
       SetUserData(myData);
       setIsLoading(false);
       console.log(myData);
     } catch {
       console.log(error);
     }
   };
   useEffect(() => {
     getUserData();
   }, []);
........................................................................................................................................

calling this api in flatbox


  <View style={styles.cont1}>
    {isLoading ? (
      <View style={styles.loader}>
        <ActivityIndicator size="large" color="black" />
      </View>
    ) : (
      <View>
        <StatusBar style="auto" />
        <Text style={styles.txt3}>Top Song</Text>
        <FlatList
          style={styles.cont2}
           scrollEnabled={false}
           scrollToOverflowEnabled={false}
           horizontal
          showsHorizontalScrollIndicator={false}
          showsVerticalScrollIndicator={false}
          data={UserData}
          renderItem={({ item }) => {
            return (
              <View style={styles.cont1}>
                <View style={styles.cont4}>
                  <Image style={styles.img1} source={{ uri: item.img }} />
                  <Text style={styles.song}>Song name:{item.song_name}</Text>
                  <Text style={styles.singer}>Singer name:{item.singer}</Text>
                  <Text style={styles.movie}>Movie name:{item.movie_name}</Text>
                  <Button
                    style={styles.btn}
                    title="watch now"
                    onPress={() => Linking.openURL(item.link)}
                  />
                </View>
              </View>
            );
          }}
        />
      </View>
    )}
  </View>;


